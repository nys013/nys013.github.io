(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{553:function(t,s,a){t.exports=a.p+"assets/img/1.c8eb150a.jpg"},587:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"起因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#起因"}},[t._v("#")]),t._v(" 起因")]),t._v(" "),s("p",[t._v("在工作中遇到这样一个问题，后端传来"),s("code",[t._v("JSON")]),t._v("字符串，前端放到页面的code编辑器中格式化展示。")]),t._v(" "),s("p",[t._v("如果直接赋值展示，code编辑器中不会进行格式化，只会是一长串的字符串缩在一起，需要前端将其解析后让数据格式化展示。")]),t._v(" "),s("p",[t._v("代码方面，前端先将接口返回的"),s("code",[t._v("JSON")]),t._v("字符串用"),s("code",[t._v("JSON.parse")]),t._v("转为对象类型，然后再用"),s("code",[t._v("JSON.stringify")]),t._v("，第三个参数传"),s("code",[t._v("\\t")]),t._v("缩进，转为"),s("code",[t._v("JSON")]),t._v("类型，再给code赋值，就能在code编辑器中格式化展现数据，如图（隐私信息已打码）")]),t._v(" "),s("img",{attrs:{src:a(553),width:"70%"}}),t._v(" "),s("h2",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("p",[t._v("但问题在于，如图中的"),s("code",[t._v("cardNo")]),t._v("、"),s("code",[t._v("documentId")]),t._v("，后端可能传来的是"),s("code",[t._v("number")]),t._v("类型，前端在"),s("code",[t._v("JSON.parse")]),t._v("后，数据精度就丢失了")]),t._v(" "),s("p",[t._v("如"),s("code",[t._v("'{\"id\":3021241541248712345}'")]),t._v("，JSON.parse后就会变成"),s("code",[t._v("{id: 3021241541248712000}")])]),t._v(" "),s("p",[t._v("首先想到的解决办法，就是叫后端更改数据类型，"),s("code",[t._v("id")]),t._v("之类的怎么看都应该是定义为"),s("code",[t._v("string")]),t._v("类型啊")]),t._v(" "),s("p",[t._v("然而，后端说，这个接口是第三方接口，他们也改不了，所以只能前端解决。。。")]),t._v(" "),s("p",[t._v("第三方接口返回的数据多种多样，质量很差，主要有这两个问题：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("不一定是JSON类型，导致"),s("code",[t._v("JSON.parse")]),t._v("解析报错；")])]),t._v(" "),s("li",[s("p",[t._v("传来超过js精度的大数类型，导致"),s("code",[t._v("JSON.parse")]),t._v("后数据精度丢失，后几位为000")])])]),t._v(" "),s("h2",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),s("p",[t._v("想到的解决方案为以下两个")]),t._v(" "),s("h3",{attrs:{id:"_1-通过第三方插件-json-bigint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-通过第三方插件-json-bigint"}},[t._v("#")]),t._v(" 1.通过第三方插件 "),s("a",{attrs:{href:"https://github.com/sidorares/json-bigint#readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("json-bigint"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("部分代码如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" JSONbig "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'json-bigint'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" parseRes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" JSONbig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stringifyRes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" JSONbig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parseRes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("codeData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stringifyRes\n")])])]),s("p",[s("strong",[t._v("优点：")]),s("br"),t._v("\n1.使用起来简单，方便快捷，为较成熟的第三方库，有人进行维护；"),s("br"),t._v("\n2.两次转化后并没有改变数据的数据类型，大数仍然是"),s("code",[t._v("number")]),t._v("类型。")]),t._v(" "),s("p",[s("strong",[t._v("缺点：")]),s("br"),t._v("\n1.使用第三方库，需下载引入依赖，需要考虑你的leader是否允许使用这个第三方库；"),s("br"),t._v("\n2.更重要的是，在这个项目中，是为了在code编辑器中反显正确数值，但是这里的处理尽管"),s("code",[t._v("parseRes")]),t._v("里的大数值被转为了"),s("code",[t._v("BigInt")]),t._v("类型，"),s("code",[t._v("stringifyRes")]),t._v("里也是正确的数值，但给编辑器赋值后，大数精度还是丢失了。就像是在浏览器控制台，随便输入一个大数，一回车，返回的就是精度丢失的数值，所以这个方法在该项目不可行")]),t._v(" "),s("blockquote",[s("p",[t._v("别的场景下这个库能用，可以做首选解决方案，但是不行的话就只能降级为方法2了")])]),t._v(" "),s("h3",{attrs:{id:"_2-用正则将大数类型转为字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-用正则将大数类型转为字符串"}},[t._v("#")]),t._v(" 2.用正则将大数类型转为字符串")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("JSON.parse")]),t._v("前，通过正则，将大数类型转为字符串，但需要考虑很多场景：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("js能处理的最大整数为"),s("code",[t._v("Math.pow(2, 53)")]),t._v("，十进制即 "),s("code",[t._v("9007199254740992")]),t._v("（16位），所以超过15位的数就要做转化")])]),t._v(" "),s("li",[s("p",[t._v("后端返回的数据，可能是仅为大数的；也可能是超过15数，但其类型已经是字符串的，即前面就有单双引号；也可能是一串网址字符串，只是中间一串超过15位的数字的。")])])]),t._v(" "),s("p",[t._v("所以正则就需要考虑这些来写，可能还有很多其他情况，所以就要根据实际业务不断完善正则了")]),t._v(" "),s("p",[t._v("最后处理完整代码如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若是返回的为仅数字的，就不需要转了")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\d+$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("codeData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jsonStr\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对json字符串中超过15位的大数进行转为字符串")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" conversionJsonStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jsonStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("([^\"'\\\\u\\/0-9])([0-9]{15,})")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1\"$2\"'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转为js对象")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" jsObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conversionJsonStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再转为格式化字符串")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("codeData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\t'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接口数据非JSON的情况，或是我们转化的字符串，导致JSON.parse报错的情况")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于这些JSON.parse无法处理报错的数据，就只能先直接原样输出")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据问题就罢了，转化的问题就只能后续再不断补充完善了")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("codeData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jsonStr\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("页面的code编辑器使用的是vue-codemirror这个插件")])]),t._v(" "),s("Vssue",{staticClass:"theme-default-content content__default"})],1)}),[],!1,null,null,null);s.default=e.exports}}]);